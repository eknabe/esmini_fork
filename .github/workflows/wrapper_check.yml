name: WrapperCheck

on:
  schedule:
    # This will run the wrapper check job Nightly at 2AM every day for the dev branch
    # * is a special character in YAML so you have to quote this string
    - cron: '0 2 * * *'

  workflow_dispatch:

jobs:
  wrapper_check:
    runs-on: windows-2022
    steps:

    - name: Checkout
      uses: actions/checkout@v4.1.7
      with:
        ref: ${{ github.event.ref }}
        submodules: false
        fetch-depth: 1  # shallow checkout

    - name: Conditional checkout dev if master
      shell: bash
      run: |
        if [ "${{ github.ref }}" == "refs/heads/master" ]; then
          git fetch origin dev
          git checkout dev
        fi

    - name: Build wrapper
      run: |
        cd EnvironmentSimulator/Libraries/esminiRMLib/CSWrapperGenerator
        dotnet build --configuration Release

    - name: Generate wrapper
      run: |
        cd EnvironmentSimulator/Libraries/esminiRMLib/CSWrapperGenerator
        ./bin/Release/net8.0/win-x64/Cpp2CSWrapperCreator.exe ../esminiRMLib.hpp esminiRMWrapper.cs

    - name: Upload generated wrapper
      uses: actions/upload-artifact@v4.3.6
      with:
        name: esminiRMWrapper
        path: EnvironmentSimulator/Libraries/esminiRMLib/CSWrapperGenerator/esminiRMWrapper.cs

    - name: Check
      # Check that generated wrapper is identical to the checked in one
      shell: bash
      run: |
        cd EnvironmentSimulator/Libraries/esminiRMLib/CSWrapperGenerator
        diff ../esminiRMWrapper.cs esminiRMWrapper.cs

    - name: What to do
      if: ${{ failure() }}
      run: |
        echo "Warning::If this job fails, check the diff output above."
        echo "The wrapper needs to be regenerated and committed"
        echo "On Windows, run from CSWrapperGenerator:"
        echo "dotnet build --configuration Release"
        echo ".\bin\Release\net8.0\win-x64\Cpp2CSWrapperCreator.exe ./esminiRMLib.hpp ../esminiRMWrapper.cs"
        echo "Alternatively, use the generated one in the 'Upload generated wrapper' job"
